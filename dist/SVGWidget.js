define(["snmd-core/MQTT","require"],function(e,t){"use strict";var n=null,s=function(){if(null!==n)throw new Error("Cannot instantiate more than one instance, use getInstance()!");this.ReWidgetName=/^([\w\-]+):([\w\-]+)$/};return s.getInstance=function(){return null===n&&(n=new s),n},s.prototype.srClassOpts=function(e,t){var n={base:["snmd-bcl-"+t],state:["snmd-scl-","snmd-scl-"+t+"-"]};return"undefined"!=typeof e.type&&n.base.push("snmd-bcl-"+e.type),"undefined"!=typeof e.bcls&&n.base.push.apply(n.base,e.bcls),"undefined"!=typeof e.bcl&&n.base.push(e.bcl),"undefined"!=typeof e.scls&&n.state.push.apply(n.state,e.scls),"undefined"!=typeof e.scl&&n.state.push(e.scl),n},s.prototype.srCreateWidget=function(n,s,i){if("undefined"==typeof i.type)return void console.error("Widget "+s.id+" has no type set!");var o=this.ReWidgetName.exec(i.type);o?t(["snmd-widgets-nagios/"+o[2]],function(t){try{var o=new t(n,s,i);"undefined"!=typeof i.topics&&i.topics.forEach(function(t){e.srRegisterTopic(t,o)})}catch(e){return void console.error("Failed to create widget "+s.id+" of type "+i.type+": "+e.message)}}):console.error("Widget "+s.id+" has a invalid syntax for 'type'!")},s.getInstance()});
//# sourceMappingURL=dist/SVGWidget.map