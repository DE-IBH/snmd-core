define(["snmd-core/MQTT","require","js-logger"],function(e,t,n){"use strict";var s=null,i=function(){if(null!==s)throw new Error("Cannot instantiate more than one instance, use getInstance()!");this.ReWidgetName=/^([\w\-]+):([\w\-]+)$/};return i.getInstance=function(){return null===s&&(s=new i),s},i.prototype.srClassOpts=function(e,t){var n={base:["snmd-bcl-"+t],state:["snmd-scl-","snmd-scl-"+t+"-"]};return"undefined"!=typeof e.type&&n.base.push("snmd-bcl-"+e.type),"undefined"!=typeof e.bcls&&n.base.push.apply(n.base,e.bcls),"undefined"!=typeof e.bcl&&n.base.push(e.bcl),"undefined"!=typeof e.scls&&n.state.push.apply(n.state,e.scls),"undefined"!=typeof e.scl&&n.state.push(e.scl),n},i.prototype.srCreateWidget=function(s,i,r){if("undefined"==typeof r.type)return void n.error("[SVGWidget] Widget "+i.id+" has no type set!");var o=this.ReWidgetName.exec(r.type);o?t(["snmd-widgets-nagios/"+o[2]],function(t){try{var o=new t(s,i,r);"undefined"!=typeof r.topics&&r.topics.forEach(function(t){e.srRegisterTopic(t,o)})}catch(e){return void n.error("[SVGWidget] Failed to create widget "+i.id+" of type "+r.type+": "+e.message)}}):n.error("[SVGWidget] Widget "+i.id+" has a invalid syntax for 'type'!")},i.getInstance()});
//# sourceMappingURL=dist/SVGWidget.map